// Generated by CoffeeScript 1.3.3

dojo.provide('app.RegisterDialog');

dojo.require('dijit.Dialog');

dojo.require('dijit.form.Button');

dojo.require('dijit.form.ValidationTextBox');

dojo.declare('app.RegisterDialog', [dijit.Dialog, app.Common], {
  app: 'app.RegisterDialog',
  title: 'ユーザー登録',
  style: 'width:350px;',
  components: {
    username: null,
    password: null,
    passwordConfirm: null,
    name: null,
    register: null
  },
  data: null,
  postCreate: function() {
    var clear, div,
      _this = this;
    this.inherited(arguments);
    div = function(item) {
      return $(_this.containerNode).append('<div style="float:left;padding-top:2px;font-size:110%;">' + item + '</div>');
    };
    clear = function() {
      return $(_this.containerNode).append('<div style="height:8px;clear:both;"></div>');
    };
    div('ユーザー（半角英数字）');
    this.components.username = new dijit.form.ValidationTextBox({
      name: 'username',
      required: true,
      style: 'width:180px;float:right;'
    }).placeAt(this.containerNode);
    clear();
    div('パスワード');
    this.components.password = new dijit.form.ValidationTextBox({
      name: 'password',
      type: 'password',
      required: true,
      style: 'width:180px;float:right;'
    }).placeAt(this.containerNode);
    clear();
    div('パスワード確認');
    this.components.passwordConfirm = new dijit.form.ValidationTextBox({
      name: 'password_confirm',
      type: 'password',
      required: true,
      style: 'width:180px;float:right;'
    }).placeAt(this.containerNode);
    clear();
    div('表示名（氏名漢字）');
    this.components.name = new dijit.form.ValidationTextBox({
      name: 'name',
      required: true,
      style: 'width:180px;float:right;'
    }).placeAt(this.containerNode);
    clear();
    this.components.register = new dijit.form.Button({
      label: '登録',
      style: 'float:right;'
    }).placeAt(this.containerNode);
    $(this.containerNode).append('<div style="clear:both"></div>');
    return dojo.connect(this.components.register, 'onClick', this, this.submit);
  },
  submit: function() {
    var data, flag, that;
    flag = true;
    if (!this.components.username.isValid()) {
      flag = false;
    }
    if (!this.components.password.isValid()) {
      flag = false;
    }
    if (this.components.password.getValue() !== this.components.passwordConfirm.getValue()) {
      flag = false;
    }
    if (!this.components.name.isValid()) {
      flag = false;
    }
    if (flag) {
      data = {
        username: this.components.username.getValue(),
        passwd: this.components.password.getValue(),
        display_name: this.components.name.getValue()
      };
      that = this;
      return dojo.xhrPost({
        url: 'php/access.php',
        handleAs: 'json',
        content: {
          "class": 'login',
          method: 'addUser',
          value: dojo.toJson(data)
        },
        load: function(data) {
          return console.log(data);
        },
        error: function(error) {
          return console.log('app.LoginDialog->authentication [error] ', error);
        }
      });
    }
  },
  onShow: function() {
    this.inherited(arguments);
    dojo.publish('app/App/layerAllShow');
    return dojo.publish('app/App/layerFadeIn');
  },
  onHide: function() {
    this.inherited(arguments);
    dojo.publish('app/Hash/changeHash', [
      {
        register: null
      }
    ]);
    dojo.publish('app/App/layerAllHide');
    return dojo.publish('app/App/layerFadeOut');
  }
});
