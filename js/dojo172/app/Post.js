// Generated by CoffeeScript 1.3.3

dojo.provide('app.Post');

dojo.require('dijit._Widget');

dojo.require('dijit._Templated');

dojo.declare('app.Post', [dijit._Widget, dijit._Templated, app.Common], {
  app: 'app.Post',
  widgetsInTemplate: true,
  templateString: dojo.cache('app', 'templates/Post.html'),
  body: '',
  style: 'display:none;',
  constructor: function(data) {
    this.inherited(arguments);
    console.log('post,', data);
    this.data = data;
    this.data.created = this.data.created.split('-').join('/');
    this.data.id_back = this.data.id;
    delete this.data.id;
    return this.data.body = this.setRelation(this.data.body);
  },
  setRelation: function(string) {
    console.log(string);
    return string;
  },
  postCreate: function() {
    this.inherited(arguments);
    $(this.appDatetime).text(this.data.created);
    if (this.data.display_name != null) {
      $(this.appUserName).text(this.data.display_name + ' (' + this.data.username + ')');
    } else {
      $(this.appUserName).text('anonymous user');
    }
    if (this.data.check_flag === '1') {
      $(this.top).addClass('appPostChecked');
    }
    return dojo.connect(this.top, 'click', this, function() {
      var flag,
        _this = this;
      console.log('clicked', flag);
      if ($(this.top).hasClass('appPostChecked')) {
        flag = 0;
      } else {
        flag = 1;
      }
      return this._setPostCheck({
        id: this.data.id_back,
        flag: flag
      }, function(data) {
        var hashkey;
        console.log('callback', data);
        $(_this.top).toggleClass('appPostChecked');
        dojo.publish('app/DataManager/clearCache', ['topic']);
        hashkey = dojox.encoding.digests.MD5(dojo.toJson({
          topic_id: _this.data.topic_id
        }));
        return dojo.publish('app/DataManager/clearCache', ['getPost', hashkey]);
      });
    });
  },
  startup: function() {
    this.inherited(arguments);
    return $(this.top).fadeIn(200);
  }
});
