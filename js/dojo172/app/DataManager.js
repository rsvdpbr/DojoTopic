// Generated by CoffeeScript 1.3.3

dojo.provide('app.DataManager');

dojo.require('app.LoginDialog');

dojo.require('app.RegisterDialog');

dojo.declare('app.DataManager', [app.Common], {
  app: 'app.DataManager',
  data: {},
  user: null,
  loginDlg: null,
  registerDlg: null,
  constructor: function() {
    this.inherited(arguments);
    console.log('app.DataManager->Constructor');
    this.setSubscribe();
    dojo.publish('app/Hash/addCallback', ['app/DataManager/onHashChange']);
    return this.login();
  },
  setSubscribe: function() {
    var h, handles;
    handles = [];
    handles.push(dojo.subscribe('app/DataManager/getUserData', this, this.getUserData));
    handles.push(dojo.subscribe('app/DataManager/getData', this, this.getData));
    handles.push(dojo.subscribe('app/DataManager/onHashChange', this, this.onHashChange));
    return h = dojo.connect(this, 'uninitialize', this, function() {
      var handle, _i, _len, _results;
      dojo.disconnect(h);
      _results = [];
      for (_i = 0, _len = handles.length; _i < _len; _i++) {
        handle = handles[_i];
        _results.push(dojo.unsubscribe(handle));
      }
      return _results;
    });
  },
  onHashChange: function(hash) {
    if (hash.register != null) {
      return this.register();
    }
  },
  login: function() {
    return this._getHashData(function(data) {
      if (data.nologin != null) {
        dojo.publish('app/App/afterLoginProcess');
        return true;
      }
      if (!(this.loginDlg != null)) {
        this.loginDlg = new app.LoginDialog();
        dojo.connect(this.loginDlg, 'onExecute', this, function() {
          this.user = this.loginDlg.getData();
          dojo.publish('app/Hash/changeHash', [
            {
              user: this.user.user
            }
          ]);
          return dojo.publish('app/App/afterLoginProcess');
        });
      }
      return this.loginDlg.show();
    });
  },
  getUserData: function(publish) {
    console.log(this.user);
    return dojo.publish(publish, [this.user]);
  },
  register: function() {
    if (!(this.registerDlg != null)) {
      this.registerDlg = new app.RegisterDialog();
    }
    return this.registerDlg.show();
  },
  getData: function(table, publish) {
    var that;
    if (this.data[table] != null) {
      return dojo.publish(publish, [this.data[table].object]);
    } else {
      that = this;
      return dojo.xhrPost({
        url: 'data/cache/' + table,
        handleAs: 'json',
        load: function(data) {
          that.data[table] = {
            datetime: new Date(),
            object: data
          };
          return dojo.publish(publish, [data]);
        },
        error: function(error) {
          return console.log('app.DataManager->getData [error] ', error);
        }
      });
    }
  }
});
